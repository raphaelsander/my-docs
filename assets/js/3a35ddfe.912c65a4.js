"use strict";(self.webpackChunkmy_docs=self.webpackChunkmy_docs||[]).push([[9379],{3905:(e,a,n)=>{n.d(a,{Zo:()=>u,kt:()=>g});var r=n(7294);function t(e,a,n){return a in e?Object.defineProperty(e,a,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[a]=n,e}function i(e,a){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);a&&(r=r.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var a=1;a<arguments.length;a++){var n=null!=arguments[a]?arguments[a]:{};a%2?i(Object(n),!0).forEach((function(a){t(e,a,n[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(n,a))}))}return e}function l(e,a){if(null==e)return{};var n,r,t=function(e,a){if(null==e)return{};var n,r,t={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],a.indexOf(n)>=0||(t[n]=e[n]);return t}(e,a);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],a.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(t[n]=e[n])}return t}var o=r.createContext({}),p=function(e){var a=r.useContext(o),n=a;return e&&(n="function"==typeof e?e(a):s(s({},a),e)),n},u=function(e){var a=p(e.components);return r.createElement(o.Provider,{value:a},e.children)},m="mdxType",d={inlineCode:"code",wrapper:function(e){var a=e.children;return r.createElement(r.Fragment,{},a)}},c=r.forwardRef((function(e,a){var n=e.components,t=e.mdxType,i=e.originalType,o=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),m=p(n),c=t,g=m["".concat(o,".").concat(c)]||m[c]||d[c]||i;return n?r.createElement(g,s(s({ref:a},u),{},{components:n})):r.createElement(g,s({ref:a},u))}));function g(e,a){var n=arguments,t=a&&a.mdxType;if("string"==typeof e||t){var i=n.length,s=new Array(i);s[0]=c;var l={};for(var o in a)hasOwnProperty.call(a,o)&&(l[o]=a[o]);l.originalType=e,l[m]="string"==typeof e?e:t,s[1]=l;for(var p=2;p<i;p++)s[p]=n[p];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}c.displayName="MDXCreateElement"},5568:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>o,contentTitle:()=>s,default:()=>d,frontMatter:()=>i,metadata:()=>l,toc:()=>p});var r=n(7462),t=(n(7294),n(3905));const i={id:"grep",title:"grep"},s="grep (**G**lobal **R**egular **E**xpression **P**rint)",l={unversionedId:"linux/grep",id:"linux/grep",title:"grep",description:"O grep \xe9 uma ferramenta utilizada para pesquisa de textos, padr\xf5es ou",source:"@site/docs/linux/grep.mdx",sourceDirName:"linux",slug:"/linux/grep",permalink:"/my-docs/docs/linux/grep",draft:!1,tags:[],version:"current",frontMatter:{id:"grep",title:"grep"},sidebar:"tutorialSidebar",previous:{title:"find",permalink:"/my-docs/docs/linux/find"},next:{title:"ip-protocols",permalink:"/my-docs/docs/linux/ip-protocols"}},o={},p=[{value:"Pesquisa em Arquivo",id:"find-in-file",level:2},{value:"Exibir Linhas Adjacentes",id:"exibir-linhas-adjacentes",level:2},{value:"Pesquisa Exata",id:"pesquisa-exata",level:2},{value:"Pesquisa em Multiplos Arquivos",id:"find-in-multi-files",level:2},{value:"Eliminar Linhas",id:"remove-lines",level:2},{value:"Filtro com Multiplas <em>Strings</em>",id:"filter-multi-strings",level:2},{value:"Pesquisa Recursiva",id:"recursive-grep",level:2},{value:"Refer\xeancias",id:"references",level:2}],u={toc:p},m="wrapper";function d(e){let{components:a,...n}=e;return(0,t.kt)(m,(0,r.Z)({},u,n,{components:a,mdxType:"MDXLayout"}),(0,t.kt)("h1",{id:"grep-global-regular-expression-print"},"grep (",(0,t.kt)("strong",{parentName:"h1"},"G"),"lobal ",(0,t.kt)("strong",{parentName:"h1"},"R"),"egular ",(0,t.kt)("strong",{parentName:"h1"},"E"),"xpression ",(0,t.kt)("strong",{parentName:"h1"},"P"),"rint)"),(0,t.kt)("p",null,"O ",(0,t.kt)("inlineCode",{parentName:"p"},"grep")," \xe9 uma ferramenta utilizada para pesquisa de textos, padr\xf5es ou\nexpress\xf5es regulares dentro de arquivos ou fluxos de entrada (stdin). Ele\nimprime linhas que correspondem a uma express\xe3o regular fornecida."),(0,t.kt)("hr",null),(0,t.kt)("h2",{id:"find-in-file"},"Pesquisa em Arquivo"),(0,t.kt)("p",null,"Para pesquisar uma ",(0,t.kt)("em",{parentName:"p"},"string")," dentro de um arquivo:"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-bash"},'$ cat frutas.txt\nbanana\nmanga\nuva\nmelancia\nabacate\n\n$ grep "manga" frutas.txt\nmanga\n')),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-bash"},'grep "/bin/bash" /etc/passwd\n')),(0,t.kt)("p",null,"Tamb\xe9m podemos fazer isso utilizando o ",(0,t.kt)("inlineCode",{parentName:"p"},"stdout")," de outro comando e passar via\n",(0,t.kt)("inlineCode",{parentName:"p"},"stdin")," para o ",(0,t.kt)("inlineCode",{parentName:"p"},"grep"),":"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-bash"},'cat /etc/passwd | grep "/bin/bash"\n')),(0,t.kt)("p",null,"Para exibir o n\xfamero da linha onde a ",(0,t.kt)("em",{parentName:"p"},"string")," foi encontrada:"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-bash"},'$ grep "pesquisa" file -n\n231 pesquisa\n')),(0,t.kt)("p",null,"Podemos enviar o ",(0,t.kt)("inlineCode",{parentName:"p"},"stdout")," do ",(0,t.kt)("inlineCode",{parentName:"p"},"grep")," para algum arquivo:"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-bash"},'cat /etc/passwd | grep "/bin/bash" > shell.txt\n')),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-bash"},'grep "/bin/bash" /etc/passwd > shell.txt\n')),(0,t.kt)("h2",{id:"exibir-linhas-adjacentes"},"Exibir Linhas Adjacentes"),(0,t.kt)("p",null,"Para exibir linhas acima do padr\xe3o desejado podemos utilizar o par\xe2metro ",(0,t.kt)("inlineCode",{parentName:"p"},"-B"),"\n(",(0,t.kt)("strong",{parentName:"p"},"B"),"efore) seguido da quantidade de linhas que queremos exibir antes:"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-bash"},'$ cat frutas.txt\nbanana\nmanga\nuva\nmelancia\nabacate\n\n$ grep "manga" -B 1 frutas.txt\nbanana\nmanga\n')),(0,t.kt)("p",null,"Para exibir linhas abaixo do padr\xe3o desejados podemos utilizar o par\xeametro ",(0,t.kt)("inlineCode",{parentName:"p"},"-A"),"\n(",(0,t.kt)("strong",{parentName:"p"},"A"),"fter) seguido da quantidade de linhas que queremos exibir ap\xf3s:"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-bash"},'$ grep "manga" -A 2 frutas.txt\nmanga\nuva\nmelancia\n')),(0,t.kt)("h2",{id:"pesquisa-exata"},"Pesquisa Exata"),(0,t.kt)("p",null,"Tamb\xe9m podemos fazer pesquisa onde levar\xe1 em quest\xe3o a palavra completa e n\xe3o\nsomente um fragmento dela:"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-bash"},"$ cat teste.txt\nsalada\nsalm\xe3o\nsal\n\n$ grep -w sal teste.txt\nsal\n")),(0,t.kt)("h2",{id:"find-in-multi-files"},"Pesquisa em Multiplos Arquivos"),(0,t.kt)("p",null,"Para pesquisar uma string em v\xe1rios arquivos, basta passar mais de um arquivo\ncomo argumento:"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-bash"},'grep "pesquisa" file1 file2\n')),(0,t.kt)("h2",{id:"remove-lines"},"Eliminar Linhas"),(0,t.kt)("p",null,"Com o ",(0,t.kt)("inlineCode",{parentName:"p"},"grep")," tamb\xe9m \xe9 poss\xedvel eliminar linhas que contenham o padr\xe3o procurado\ne exibir o restante do conte\xfado do arquivo passado como argumento:"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-bash"},'grep -v "nologin" /etc/passwd\n')),(0,t.kt)("p",null,"Mesmo exemplo utilizando ",(0,t.kt)("inlineCode",{parentName:"p"},"stdin"),":"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-bash"},'cat /etc/passwd | grep -v "nologin"\n')),(0,t.kt)("h2",{id:"filter-multi-strings"},"Filtro com Multiplas ",(0,t.kt)("em",{parentName:"h2"},"Strings")),(0,t.kt)("p",null,"H\xe1 duas formas de fazer isso, a primeira \xe9 contatenando multiplos comandos de\n",(0,t.kt)("inlineCode",{parentName:"p"},"grep")," e outra \xe9 utilizando o comando ",(0,t.kt)("inlineCode",{parentName:"p"},"grep -E")," ou ",(0,t.kt)("inlineCode",{parentName:"p"},"egrep"),", uma variante\ndescontinuada por\xe9m ainda funcional."),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-bash"},'cat /etc/passwd | grep -v "nologin" | grep -v "/bin/false"\n')),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-bash"},'grep -v "nologin" /etc/passwd | grep -v "/bin/false"\n')),(0,t.kt)("p",null,"No exemplo do ",(0,t.kt)("inlineCode",{parentName:"p"},"egrep")," utilizamos o ",(0,t.kt)("inlineCode",{parentName:"p"},"|")," para separar os padr\xf5es que desejamos\npesquisar ou eliminar no ",(0,t.kt)("inlineCode",{parentName:"p"},"stdout"),"."),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-bash"},'grep -v -E "nologin|/bin/false" /etc/passwd\n')),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-bash"},'egrep -v "nologin|/bin/false" /etc/passwd\n')),(0,t.kt)("h2",{id:"recursive-grep"},"Pesquisa Recursiva"),(0,t.kt)("p",null,"\xc9 poss\xedvel fazer uma pesquisa recursiva em um diret\xf3rio:"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-bash"},'grep -R "nologin"\n')),(0,t.kt)("h2",{id:"references"},"Refer\xeancias"),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("a",{parentName:"li",href:"https://www.gnu.org/software/grep/"},"https://www.gnu.org/software/grep/")),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("a",{parentName:"li",href:"https://www.vivaolinux.com.br/dica/Exibindo-linhas-anteriores-e-posteriores-a-string-pesquisada-no-Linux"},"https://www.vivaolinux.com.br/dica/Exibindo-linhas-anteriores-e-posteriores-a-string-pesquisada-no-Linux"))))}d.isMDXComponent=!0}}]);