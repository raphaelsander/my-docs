"use strict";(self.webpackChunkmy_docs=self.webpackChunkmy_docs||[]).push([[2320],{6749:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>d,contentTitle:()=>l,default:()=>u,frontMatter:()=>i,metadata:()=>o,toc:()=>c});var a=s(4848),r=s(8453);const i={id:"grep",title:"grep"},l="grep (Global Regular Expression Print)",o={id:"linux/grep",title:"grep",description:"O grep \xe9 uma ferramenta utilizada para pesquisa de textos, padr\xf5es ou",source:"@site/docs/linux/grep.mdx",sourceDirName:"linux",slug:"/linux/grep",permalink:"/my-docs/docs/linux/grep",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{id:"grep",title:"grep"},sidebar:"tutorialSidebar",previous:{title:"find",permalink:"/my-docs/docs/linux/find"},next:{title:"ip-protocols",permalink:"/my-docs/docs/linux/ip-protocols"}},d={},c=[{value:"Pesquisa em Arquivo",id:"find-in-file",level:2},{value:"Exibir Linhas Adjacentes",id:"exibir-linhas-adjacentes",level:2},{value:"Pesquisa Exata",id:"pesquisa-exata",level:2},{value:"Pesquisa em Multiplos Arquivos",id:"find-in-multi-files",level:2},{value:"Eliminar Linhas",id:"remove-lines",level:2},{value:"Filtro com Multiplas <em>Strings</em>",id:"filter-multi-strings",level:2},{value:"Pesquisa Recursiva",id:"recursive-grep",level:2},{value:"Refer\xeancias",id:"references",level:2}];function t(e){const n={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)(n.h1,{id:"grep-global-regular-expression-print",children:["grep (",(0,a.jsx)(n.strong,{children:"G"}),"lobal ",(0,a.jsx)(n.strong,{children:"R"}),"egular ",(0,a.jsx)(n.strong,{children:"E"}),"xpression ",(0,a.jsx)(n.strong,{children:"P"}),"rint)"]}),"\n",(0,a.jsxs)(n.p,{children:["O ",(0,a.jsx)(n.code,{children:"grep"})," \xe9 uma ferramenta utilizada para pesquisa de textos, padr\xf5es ou\nexpress\xf5es regulares dentro de arquivos ou fluxos de entrada (stdin). Ele\nimprime linhas que correspondem a uma express\xe3o regular fornecida."]}),"\n",(0,a.jsx)(n.hr,{}),"\n",(0,a.jsx)(n.h2,{id:"find-in-file",children:"Pesquisa em Arquivo"}),"\n",(0,a.jsxs)(n.p,{children:["Para pesquisar uma ",(0,a.jsx)(n.em,{children:"string"})," dentro de um arquivo:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:'$ cat frutas.txt\nbanana\nmanga\nuva\nmelancia\nabacate\n\n$ grep "manga" frutas.txt\nmanga\n'})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:'grep "/bin/bash" /etc/passwd\n'})}),"\n",(0,a.jsxs)(n.p,{children:["Tamb\xe9m podemos fazer isso utilizando o ",(0,a.jsx)(n.code,{children:"stdout"})," de outro comando e passar via\n",(0,a.jsx)(n.code,{children:"stdin"})," para o ",(0,a.jsx)(n.code,{children:"grep"}),":"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:'cat /etc/passwd | grep "/bin/bash"\n'})}),"\n",(0,a.jsxs)(n.p,{children:["Para exibir o n\xfamero da linha onde a ",(0,a.jsx)(n.em,{children:"string"})," foi encontrada:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:'$ grep "pesquisa" file -n\n231 pesquisa\n'})}),"\n",(0,a.jsxs)(n.p,{children:["Podemos enviar o ",(0,a.jsx)(n.code,{children:"stdout"})," do ",(0,a.jsx)(n.code,{children:"grep"})," para algum arquivo:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:'cat /etc/passwd | grep "/bin/bash" > shell.txt\n'})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:'grep "/bin/bash" /etc/passwd > shell.txt\n'})}),"\n",(0,a.jsx)(n.h2,{id:"exibir-linhas-adjacentes",children:"Exibir Linhas Adjacentes"}),"\n",(0,a.jsxs)(n.p,{children:["Para exibir linhas acima do padr\xe3o desejado podemos utilizar o par\xe2metro ",(0,a.jsx)(n.code,{children:"-B"}),"\n(",(0,a.jsx)(n.strong,{children:"B"}),"efore) seguido da quantidade de linhas que queremos exibir antes:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:'$ cat frutas.txt\nbanana\nmanga\nuva\nmelancia\nabacate\n\n$ grep "manga" -B 1 frutas.txt\nbanana\nmanga\n'})}),"\n",(0,a.jsxs)(n.p,{children:["Para exibir linhas abaixo do padr\xe3o desejados podemos utilizar o par\xeametro ",(0,a.jsx)(n.code,{children:"-A"}),"\n(",(0,a.jsx)(n.strong,{children:"A"}),"fter) seguido da quantidade de linhas que queremos exibir ap\xf3s:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:'$ grep "manga" -A 2 frutas.txt\nmanga\nuva\nmelancia\n'})}),"\n",(0,a.jsx)(n.h2,{id:"pesquisa-exata",children:"Pesquisa Exata"}),"\n",(0,a.jsx)(n.p,{children:"Tamb\xe9m podemos fazer pesquisa onde levar\xe1 em quest\xe3o a palavra completa e n\xe3o\nsomente um fragmento dela:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"$ cat teste.txt\nsalada\nsalm\xe3o\nsal\n\n$ grep -w sal teste.txt\nsal\n"})}),"\n",(0,a.jsx)(n.h2,{id:"find-in-multi-files",children:"Pesquisa em Multiplos Arquivos"}),"\n",(0,a.jsx)(n.p,{children:"Para pesquisar uma string em v\xe1rios arquivos, basta passar mais de um arquivo\ncomo argumento:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:'grep "pesquisa" file1 file2\n'})}),"\n",(0,a.jsx)(n.h2,{id:"remove-lines",children:"Eliminar Linhas"}),"\n",(0,a.jsxs)(n.p,{children:["Com o ",(0,a.jsx)(n.code,{children:"grep"})," tamb\xe9m \xe9 poss\xedvel eliminar linhas que contenham o padr\xe3o procurado\ne exibir o restante do conte\xfado do arquivo passado como argumento:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:'grep -v "nologin" /etc/passwd\n'})}),"\n",(0,a.jsxs)(n.p,{children:["Mesmo exemplo utilizando ",(0,a.jsx)(n.code,{children:"stdin"}),":"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:'cat /etc/passwd | grep -v "nologin"\n'})}),"\n",(0,a.jsxs)(n.h2,{id:"filter-multi-strings",children:["Filtro com Multiplas ",(0,a.jsx)(n.em,{children:"Strings"})]}),"\n",(0,a.jsxs)(n.p,{children:["H\xe1 duas formas de fazer isso, a primeira \xe9 contatenando multiplos comandos de\n",(0,a.jsx)(n.code,{children:"grep"})," e outra \xe9 utilizando o comando ",(0,a.jsx)(n.code,{children:"grep -E"})," ou ",(0,a.jsx)(n.code,{children:"egrep"}),", uma variante\ndescontinuada por\xe9m ainda funcional."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:'cat /etc/passwd | grep -v "nologin" | grep -v "/bin/false"\n'})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:'grep -v "nologin" /etc/passwd | grep -v "/bin/false"\n'})}),"\n",(0,a.jsxs)(n.p,{children:["No exemplo do ",(0,a.jsx)(n.code,{children:"egrep"})," utilizamos o ",(0,a.jsx)(n.code,{children:"|"})," para separar os padr\xf5es que desejamos\npesquisar ou eliminar no ",(0,a.jsx)(n.code,{children:"stdout"}),"."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:'grep -v -E "nologin|/bin/false" /etc/passwd\n'})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:'egrep -v "nologin|/bin/false" /etc/passwd\n'})}),"\n",(0,a.jsx)(n.h2,{id:"recursive-grep",children:"Pesquisa Recursiva"}),"\n",(0,a.jsx)(n.p,{children:"\xc9 poss\xedvel fazer uma pesquisa recursiva em um diret\xf3rio:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:'grep -R "nologin"\n'})}),"\n",(0,a.jsx)(n.h2,{id:"references",children:"Refer\xeancias"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"https://www.gnu.org/software/grep/",children:"https://www.gnu.org/software/grep/"})}),"\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"https://www.vivaolinux.com.br/dica/Exibindo-linhas-anteriores-e-posteriores-a-string-pesquisada-no-Linux",children:"https://www.vivaolinux.com.br/dica/Exibindo-linhas-anteriores-e-posteriores-a-string-pesquisada-no-Linux"})}),"\n"]})]})}function u(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(t,{...e})}):t(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>l,x:()=>o});var a=s(6540);const r={},i=a.createContext(r);function l(e){const n=a.useContext(i);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),a.createElement(i.Provider,{value:n},e.children)}}}]);